# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Push WHL Package

on:
  release:
    types: [published]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        python -m venv venv
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Run test command
    - run: pip install pytest
    - run: echo "Hello form test job in stage test"
    - run: echo "Run your tests here ..."
    
  pre_commit_hooks:
    runs-on: ubuntu-latest
    steps:
    - name: Run pre_commit_hooks command
    - run: pip install pre-commit
    - run: echo "Hello form pre-commit-hook job in stage test"
    - run: echo "Run your pre-commit-hooks here ..."
    
  wheel:
  runs-on: ubuntu-latest
  steps:
  - name: UPLOAD WHEEL
  - run: pip install twine wheel
  - run: echo "Hello form build-push-wheel job in stage test"
  - run: rm -rf dist/ build/ \*.egg-info/
  - run: export TWINE_USERNAME=$ARTIFACTORY_USER
  - run: export TWINE_PASSWORD=$ARTIFACTORY_TOKEN
  - run: export APP_VERSION=$(cat delivery-sheets/source/VERSION)
  - run: export REQ_TXT=$(cat requirements.txt)
